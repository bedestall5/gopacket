#!/bin/bash
# Copyright 2012 Google, Inc. All rights reserved.

BENCH=""
if [ ! -z "$1" ]; then
  case "$1" in
    "--benchmark")
      BENCH="yes"
      ;;
    *)
      echo "USAGE: $0 [--benchmark]"
      exit 1
      ;;
  esac
fi

set -e
set -x

cd $(dirname $0)

# First, make sure everything is formatted, compiles, and tests pass.
go fmt
gofmt -w gen.go
gofmt -w pcap/benchmark.go
go build gen.go
go build pcap/benchmark.go
go test

if [ -z "$BENCH" ]; then
  git commit -a
  exit
fi

# Now, we do magic...
#  1) Run current benchmarks
#  2) Commit with temporary description
#  3) Revert to state of the previous benchmark commit
#  4) Run old benchmarks
#  5) Reset to new state
#  6) Modify head commit description, adding in benchmarks

# File we're going to build our commit description in.
COMMIT_FILE="$(mktemp)"

cat >> $COMMIT_FILE <<EOF
...ENTER COMMIT MESSAGE HERE...
----------------------------------------------------------
BENCHMARK_MARKER_DO_NOT_CHANGE
----------------------------------------------------------


TEST BENCHMARKS
EOF
go test --test.bench=.* 2>&1 | tee -a $COMMIT_FILE
cat >> $COMMIT_FILE <<EOF


PACKET BENCHMARK
EOF
go run pcap/benchmark.go 2>&1 | tee -a $COMMIT_FILE

git commit -a -m "Commit at $(date), temporary message"

CURRENT=$(git log -n 1 | head -n 1 | awk '{print $2}')
PREV=$(git log -n 1 --grep='BENCHMARK_MARKER_DO_NOT_CHANGE' | head -n 1 | awk '{print $2}')

git reset $PREV

cat >> $COMMIT_FILE <<EOF
----------------------------------------------------------


OLD TEST BENCHMARKS
EOF
go test --test.bench=.* 2>&1 | tee -a $COMMIT_FILE
cat >> $COMMIT_FILE <<EOF


OLD PACKET BENCHMARK
EOF
go run pcap/benchmark.go 2>&1 | tee -a $COMMIT_FILE

git reset --hard $CURRENT

$EDITOR $COMMIT_FILE

git commit --amend -F $COMMIT_FILE
